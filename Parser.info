-----------------------------------------------------------------------------
Info file generated by Happy Version 2.0.1 from Parser.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_calc -> Inicio                              (0)
	Inicio -> Logica                                   (1)
	Inicio -> Expr                                     (2)
	Logica -> Logica '&&' LTermo                       (3)
	Logica -> Logica '||' LTermo                       (4)
	Logica -> LTermo                                   (5)
	LTermo -> '!' LFator                               (6)
	LTermo -> LFator                                   (7)
	LFator -> '(' Logica ')'                           (8)
	LFator -> RelExpr                                  (9)
	RelExpr -> Expr '==' Expr                          (10)
	RelExpr -> Expr '>=' Expr                          (11)
	RelExpr -> Expr '>' Expr                           (12)
	RelExpr -> Expr '<' Expr                           (13)
	RelExpr -> Expr '<=' Expr                          (14)
	RelExpr -> Expr '/=' Expr                          (15)
	Expr -> Expr '+' Term                              (16)
	Expr -> Expr '-' Term                              (17)
	Expr -> Term                                       (18)
	Term -> Term '*' Factor                            (19)
	Term -> Term '/' Factor                            (20)
	Term -> Factor                                     (21)
	Factor -> Num                                      (22)
	Factor -> '(' Expr ')'                             (23)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'+'            { ADD }
	'-'            { SUB }
	'*'            { MUL }
	'/'            { DIV }
	'('            { LPAR }
	')'            { RPAR }
	'/='           { DIF }
	'&&'           { E }
	'||'           { OU }
	'!'            { NAO }
	'=='           { IGUAL }
	'>='           { MAIORE }
	'>'            { MAIOR }
	'<='           { MENORE }
	'<'            { MENOR }
	Num            { NUM $$ }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_calc     rule  0
	Inicio          rules 1, 2
	Logica          rules 3, 4, 5
	LTermo          rules 6, 7
	LFator          rules 8, 9
	RelExpr         rules 10, 11, 12, 13, 14, 15
	Expr            rules 16, 17, 18
	Term            rules 19, 20, 21
	Factor          rules 22, 23

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_calc -> . Inicio                             (rule 0)

	'('            shift, and enter state 9
	'!'            shift, and enter state 10
	Num            shift, and enter state 11

	Inicio         goto state 12
	Logica         goto state 2
	LTermo         goto state 3
	LFator         goto state 4
	RelExpr        goto state 5
	Expr           goto state 13
	Term           goto state 7
	Factor         goto state 8

State 1

	Inicio -> . Logica                                  (rule 1)

	'('            shift, and enter state 9
	'!'            shift, and enter state 10
	Num            shift, and enter state 11

	Logica         goto state 2
	LTermo         goto state 3
	LFator         goto state 4
	RelExpr        goto state 5
	Expr           goto state 6
	Term           goto state 7
	Factor         goto state 8

State 2

	Inicio -> Logica .                                  (rule 1)
	Logica -> Logica . '&&' LTermo                      (rule 3)
	Logica -> Logica . '||' LTermo                      (rule 4)

	'&&'           shift, and enter state 27
	'||'           shift, and enter state 28
	%eof           reduce using rule 1


State 3

	Logica -> LTermo .                                  (rule 5)

	')'            reduce using rule 5
	'&&'           reduce using rule 5
	'||'           reduce using rule 5
	%eof           reduce using rule 5


State 4

	LTermo -> LFator .                                  (rule 7)

	')'            reduce using rule 7
	'&&'           reduce using rule 7
	'||'           reduce using rule 7
	%eof           reduce using rule 7


State 5

	LFator -> RelExpr .                                 (rule 9)

	')'            reduce using rule 9
	'&&'           reduce using rule 9
	'||'           reduce using rule 9
	%eof           reduce using rule 9


State 6

	RelExpr -> Expr . '==' Expr                         (rule 10)
	RelExpr -> Expr . '>=' Expr                         (rule 11)
	RelExpr -> Expr . '>' Expr                          (rule 12)
	RelExpr -> Expr . '<' Expr                          (rule 13)
	RelExpr -> Expr . '<=' Expr                         (rule 14)
	RelExpr -> Expr . '/=' Expr                         (rule 15)
	Expr -> Expr . '+' Term                             (rule 16)
	Expr -> Expr . '-' Term                             (rule 17)

	'+'            shift, and enter state 14
	'-'            shift, and enter state 15
	'/='           shift, and enter state 16
	'=='           shift, and enter state 17
	'>='           shift, and enter state 18
	'>'            shift, and enter state 19
	'<='           shift, and enter state 20
	'<'            shift, and enter state 21


State 7

	Expr -> Term .                                      (rule 18)
	Term -> Term . '*' Factor                           (rule 19)
	Term -> Term . '/' Factor                           (rule 20)

	'+'            reduce using rule 18
	'-'            reduce using rule 18
	'*'            shift, and enter state 25
	'/'            shift, and enter state 26
	')'            reduce using rule 18
	'/='           reduce using rule 18
	'&&'           reduce using rule 18
	'||'           reduce using rule 18
	'=='           reduce using rule 18
	'>='           reduce using rule 18
	'>'            reduce using rule 18
	'<='           reduce using rule 18
	'<'            reduce using rule 18
	%eof           reduce using rule 18


State 8

	Term -> Factor .                                    (rule 21)

	'+'            reduce using rule 21
	'-'            reduce using rule 21
	'*'            reduce using rule 21
	'/'            reduce using rule 21
	')'            reduce using rule 21
	'/='           reduce using rule 21
	'&&'           reduce using rule 21
	'||'           reduce using rule 21
	'=='           reduce using rule 21
	'>='           reduce using rule 21
	'>'            reduce using rule 21
	'<='           reduce using rule 21
	'<'            reduce using rule 21
	%eof           reduce using rule 21


State 9

	LFator -> '(' . Logica ')'                          (rule 8)
	Factor -> '(' . Expr ')'                            (rule 23)

	'('            shift, and enter state 9
	'!'            shift, and enter state 10
	Num            shift, and enter state 11

	Logica         goto state 23
	LTermo         goto state 3
	LFator         goto state 4
	RelExpr        goto state 5
	Expr           goto state 24
	Term           goto state 7
	Factor         goto state 8

State 10

	LTermo -> '!' . LFator                              (rule 6)

	'('            shift, and enter state 9
	Num            shift, and enter state 11

	LFator         goto state 22
	RelExpr        goto state 5
	Expr           goto state 6
	Term           goto state 7
	Factor         goto state 8

State 11

	Factor -> Num .                                     (rule 22)

	'+'            reduce using rule 22
	'-'            reduce using rule 22
	'*'            reduce using rule 22
	'/'            reduce using rule 22
	')'            reduce using rule 22
	'/='           reduce using rule 22
	'&&'           reduce using rule 22
	'||'           reduce using rule 22
	'=='           reduce using rule 22
	'>='           reduce using rule 22
	'>'            reduce using rule 22
	'<='           reduce using rule 22
	'<'            reduce using rule 22
	%eof           reduce using rule 22


State 12

	%start_calc -> Inicio .                             (rule 0)

	%eof           accept


State 13

	Inicio -> Expr .                                    (rule 2)
	RelExpr -> Expr . '==' Expr                         (rule 10)
	RelExpr -> Expr . '>=' Expr                         (rule 11)
	RelExpr -> Expr . '>' Expr                          (rule 12)
	RelExpr -> Expr . '<' Expr                          (rule 13)
	RelExpr -> Expr . '<=' Expr                         (rule 14)
	RelExpr -> Expr . '/=' Expr                         (rule 15)
	Expr -> Expr . '+' Term                             (rule 16)
	Expr -> Expr . '-' Term                             (rule 17)

	'+'            shift, and enter state 14
	'-'            shift, and enter state 15
	'/='           shift, and enter state 16
	'=='           shift, and enter state 17
	'>='           shift, and enter state 18
	'>'            shift, and enter state 19
	'<='           shift, and enter state 20
	'<'            shift, and enter state 21
	%eof           reduce using rule 2


State 14

	Expr -> Expr '+' . Term                             (rule 16)

	'('            shift, and enter state 32
	Num            shift, and enter state 11

	Term           goto state 43
	Factor         goto state 8

State 15

	Expr -> Expr '-' . Term                             (rule 17)

	'('            shift, and enter state 32
	Num            shift, and enter state 11

	Term           goto state 42
	Factor         goto state 8

State 16

	RelExpr -> Expr '/=' . Expr                         (rule 15)

	'('            shift, and enter state 32
	Num            shift, and enter state 11

	Expr           goto state 41
	Term           goto state 7
	Factor         goto state 8

State 17

	RelExpr -> Expr '==' . Expr                         (rule 10)

	'('            shift, and enter state 32
	Num            shift, and enter state 11

	Expr           goto state 40
	Term           goto state 7
	Factor         goto state 8

State 18

	RelExpr -> Expr '>=' . Expr                         (rule 11)

	'('            shift, and enter state 32
	Num            shift, and enter state 11

	Expr           goto state 39
	Term           goto state 7
	Factor         goto state 8

State 19

	RelExpr -> Expr '>' . Expr                          (rule 12)

	'('            shift, and enter state 32
	Num            shift, and enter state 11

	Expr           goto state 38
	Term           goto state 7
	Factor         goto state 8

State 20

	RelExpr -> Expr '<=' . Expr                         (rule 14)

	'('            shift, and enter state 32
	Num            shift, and enter state 11

	Expr           goto state 37
	Term           goto state 7
	Factor         goto state 8

State 21

	RelExpr -> Expr '<' . Expr                          (rule 13)

	'('            shift, and enter state 32
	Num            shift, and enter state 11

	Expr           goto state 36
	Term           goto state 7
	Factor         goto state 8

State 22

	LTermo -> '!' LFator .                              (rule 6)

	')'            reduce using rule 6
	'&&'           reduce using rule 6
	'||'           reduce using rule 6
	%eof           reduce using rule 6


State 23

	Logica -> Logica . '&&' LTermo                      (rule 3)
	Logica -> Logica . '||' LTermo                      (rule 4)
	LFator -> '(' Logica . ')'                          (rule 8)

	')'            shift, and enter state 35
	'&&'           shift, and enter state 27
	'||'           shift, and enter state 28


State 24

	RelExpr -> Expr . '==' Expr                         (rule 10)
	RelExpr -> Expr . '>=' Expr                         (rule 11)
	RelExpr -> Expr . '>' Expr                          (rule 12)
	RelExpr -> Expr . '<' Expr                          (rule 13)
	RelExpr -> Expr . '<=' Expr                         (rule 14)
	RelExpr -> Expr . '/=' Expr                         (rule 15)
	Expr -> Expr . '+' Term                             (rule 16)
	Expr -> Expr . '-' Term                             (rule 17)
	Factor -> '(' Expr . ')'                            (rule 23)

	'+'            shift, and enter state 14
	'-'            shift, and enter state 15
	')'            shift, and enter state 34
	'/='           shift, and enter state 16
	'=='           shift, and enter state 17
	'>='           shift, and enter state 18
	'>'            shift, and enter state 19
	'<='           shift, and enter state 20
	'<'            shift, and enter state 21


State 25

	Term -> Term '*' . Factor                           (rule 19)

	'('            shift, and enter state 32
	Num            shift, and enter state 11

	Factor         goto state 33

State 26

	Term -> Term '/' . Factor                           (rule 20)

	'('            shift, and enter state 32
	Num            shift, and enter state 11

	Factor         goto state 31

State 27

	Logica -> Logica '&&' . LTermo                      (rule 3)

	'('            shift, and enter state 9
	'!'            shift, and enter state 10
	Num            shift, and enter state 11

	LTermo         goto state 30
	LFator         goto state 4
	RelExpr        goto state 5
	Expr           goto state 6
	Term           goto state 7
	Factor         goto state 8

State 28

	Logica -> Logica '||' . LTermo                      (rule 4)

	'('            shift, and enter state 9
	'!'            shift, and enter state 10
	Num            shift, and enter state 11

	LTermo         goto state 29
	LFator         goto state 4
	RelExpr        goto state 5
	Expr           goto state 6
	Term           goto state 7
	Factor         goto state 8

State 29

	Logica -> Logica '||' LTermo .                      (rule 4)

	')'            reduce using rule 4
	'&&'           reduce using rule 4
	'||'           reduce using rule 4
	%eof           reduce using rule 4


State 30

	Logica -> Logica '&&' LTermo .                      (rule 3)

	')'            reduce using rule 3
	'&&'           reduce using rule 3
	'||'           reduce using rule 3
	%eof           reduce using rule 3


State 31

	Term -> Term '/' Factor .                           (rule 20)

	'+'            reduce using rule 20
	'-'            reduce using rule 20
	'*'            reduce using rule 20
	'/'            reduce using rule 20
	')'            reduce using rule 20
	'/='           reduce using rule 20
	'&&'           reduce using rule 20
	'||'           reduce using rule 20
	'=='           reduce using rule 20
	'>='           reduce using rule 20
	'>'            reduce using rule 20
	'<='           reduce using rule 20
	'<'            reduce using rule 20
	%eof           reduce using rule 20


State 32

	Factor -> '(' . Expr ')'                            (rule 23)

	'('            shift, and enter state 32
	Num            shift, and enter state 11

	Expr           goto state 44
	Term           goto state 7
	Factor         goto state 8

State 33

	Term -> Term '*' Factor .                           (rule 19)

	'+'            reduce using rule 19
	'-'            reduce using rule 19
	'*'            reduce using rule 19
	'/'            reduce using rule 19
	')'            reduce using rule 19
	'/='           reduce using rule 19
	'&&'           reduce using rule 19
	'||'           reduce using rule 19
	'=='           reduce using rule 19
	'>='           reduce using rule 19
	'>'            reduce using rule 19
	'<='           reduce using rule 19
	'<'            reduce using rule 19
	%eof           reduce using rule 19


State 34

	Factor -> '(' Expr ')' .                            (rule 23)

	'+'            reduce using rule 23
	'-'            reduce using rule 23
	'*'            reduce using rule 23
	'/'            reduce using rule 23
	')'            reduce using rule 23
	'/='           reduce using rule 23
	'&&'           reduce using rule 23
	'||'           reduce using rule 23
	'=='           reduce using rule 23
	'>='           reduce using rule 23
	'>'            reduce using rule 23
	'<='           reduce using rule 23
	'<'            reduce using rule 23
	%eof           reduce using rule 23


State 35

	LFator -> '(' Logica ')' .                          (rule 8)

	')'            reduce using rule 8
	'&&'           reduce using rule 8
	'||'           reduce using rule 8
	%eof           reduce using rule 8


State 36

	RelExpr -> Expr '<' Expr .                          (rule 13)
	Expr -> Expr . '+' Term                             (rule 16)
	Expr -> Expr . '-' Term                             (rule 17)

	'+'            shift, and enter state 14
	'-'            shift, and enter state 15
	')'            reduce using rule 13
	'&&'           reduce using rule 13
	'||'           reduce using rule 13
	%eof           reduce using rule 13


State 37

	RelExpr -> Expr '<=' Expr .                         (rule 14)
	Expr -> Expr . '+' Term                             (rule 16)
	Expr -> Expr . '-' Term                             (rule 17)

	'+'            shift, and enter state 14
	'-'            shift, and enter state 15
	')'            reduce using rule 14
	'&&'           reduce using rule 14
	'||'           reduce using rule 14
	%eof           reduce using rule 14


State 38

	RelExpr -> Expr '>' Expr .                          (rule 12)
	Expr -> Expr . '+' Term                             (rule 16)
	Expr -> Expr . '-' Term                             (rule 17)

	'+'            shift, and enter state 14
	'-'            shift, and enter state 15
	')'            reduce using rule 12
	'&&'           reduce using rule 12
	'||'           reduce using rule 12
	%eof           reduce using rule 12


State 39

	RelExpr -> Expr '>=' Expr .                         (rule 11)
	Expr -> Expr . '+' Term                             (rule 16)
	Expr -> Expr . '-' Term                             (rule 17)

	'+'            shift, and enter state 14
	'-'            shift, and enter state 15
	')'            reduce using rule 11
	'&&'           reduce using rule 11
	'||'           reduce using rule 11
	%eof           reduce using rule 11


State 40

	RelExpr -> Expr '==' Expr .                         (rule 10)
	Expr -> Expr . '+' Term                             (rule 16)
	Expr -> Expr . '-' Term                             (rule 17)

	'+'            shift, and enter state 14
	'-'            shift, and enter state 15
	')'            reduce using rule 10
	'&&'           reduce using rule 10
	'||'           reduce using rule 10
	%eof           reduce using rule 10


State 41

	RelExpr -> Expr '/=' Expr .                         (rule 15)
	Expr -> Expr . '+' Term                             (rule 16)
	Expr -> Expr . '-' Term                             (rule 17)

	'+'            shift, and enter state 14
	'-'            shift, and enter state 15
	')'            reduce using rule 15
	'&&'           reduce using rule 15
	'||'           reduce using rule 15
	%eof           reduce using rule 15


State 42

	Expr -> Expr '-' Term .                             (rule 17)
	Term -> Term . '*' Factor                           (rule 19)
	Term -> Term . '/' Factor                           (rule 20)

	'+'            reduce using rule 17
	'-'            reduce using rule 17
	'*'            shift, and enter state 25
	'/'            shift, and enter state 26
	')'            reduce using rule 17
	'/='           reduce using rule 17
	'&&'           reduce using rule 17
	'||'           reduce using rule 17
	'=='           reduce using rule 17
	'>='           reduce using rule 17
	'>'            reduce using rule 17
	'<='           reduce using rule 17
	'<'            reduce using rule 17
	%eof           reduce using rule 17


State 43

	Expr -> Expr '+' Term .                             (rule 16)
	Term -> Term . '*' Factor                           (rule 19)
	Term -> Term . '/' Factor                           (rule 20)

	'+'            reduce using rule 16
	'-'            reduce using rule 16
	'*'            shift, and enter state 25
	'/'            shift, and enter state 26
	')'            reduce using rule 16
	'/='           reduce using rule 16
	'&&'           reduce using rule 16
	'||'           reduce using rule 16
	'=='           reduce using rule 16
	'>='           reduce using rule 16
	'>'            reduce using rule 16
	'<='           reduce using rule 16
	'<'            reduce using rule 16
	%eof           reduce using rule 16


State 44

	Expr -> Expr . '+' Term                             (rule 16)
	Expr -> Expr . '-' Term                             (rule 17)
	Factor -> '(' Expr . ')'                            (rule 23)

	'+'            shift, and enter state 14
	'-'            shift, and enter state 15
	')'            shift, and enter state 34


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 24
Number of terminals: 16
Number of non-terminals: 9
Number of states: 45
